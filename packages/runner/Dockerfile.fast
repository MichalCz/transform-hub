ARG PACKAGE_DIR="/package"
ARG PIPES_DIR="/pipes"
ARG RUNNER_DIR="/app"

FROM repo.int.scp.ovh/scramjet/nodejs:buster AS target

ARG PACKAGE_DIR
ARG PIPES_DIR
ARG RUNNER_DIR

RUN    apt-get update \
    && apt-get install --no-install-recommends -y gosu \
    && apt-get clean \
    && apt-get autoremove -y \
    && rm -rf \
         /var/lib/apt/* \
         /usr/share/locale \
         /usr/share/doc \
    && groupadd -g 1200 runner \
    && useradd -g 1200 -u 1200 -m -d $RUNNER_DIR -s /bin/bash runner \
    && mkdir $PACKAGE_DIR $PIPES_DIR \
    && chown runner:runner $PACKAGE_DIR $PIPES_DIR

FROM repo.int.scp.ovh/scramjet/nodejs:buster AS builder

ARG RUNNER_DIR

ADD node_modules ${RUNNER_DIR}/node_modules
ADD dist ${RUNNER_DIR}/dist
ADD packages/types ${RUNNER_DIR}/packages/types
ADD packages/symbols ${RUNNER_DIR}/packages/symbols
ADD packages/model ${RUNNER_DIR}/packages/model
ADD packages/logger ${RUNNER_DIR}/packages/logger
ADD packages/runner ${RUNNER_DIR}/packages/runner
ADD scripts ${RUNNER_DIR}/scripts
ADD bin ${RUNNER_DIR}/bin
ADD conf ${RUNNER_DIR}/conf
ADD LICENSE package.json yarn.lock lerna.json tsconfig.base.json $RUNNER_DIR/

WORKDIR $RUNNER_DIR/

RUN echo $PWD && ls
RUN yarn bic

WORKDIR $RUNNER_DIR/packages/symbols
RUN    test -d ./dist \
    && NO_INSTALL=true LOCAL_PACKAGES=true node ../../scripts/publish.js

WORKDIR $RUNNER_DIR/packages/logger
RUN     test -d ./dist \
    &&  NO_INSTALL=true LOCAL_PACKAGES=true node ../../scripts/publish.js

WORKDIR $RUNNER_DIR/packages/model
RUN    test -d ./dist \
    && NO_INSTALL=true LOCAL_PACKAGES=true node ../../scripts/publish.js

WORKDIR $RUNNER_DIR/packages/runner
RUN    test -d ./dist \
    && NO_INSTALL=true LOCAL_PACKAGES=true node ../../scripts/publish.js

FROM target

ARG PACKAGE_DIR
ARG PIPES_DIR
ARG RUNNER_DIR

COPY --chown=runner:runner --from=builder $RUNNER_DIR/dist /$RUNNER_DIR/

WORKDIR /$RUNNER_DIR/runner

RUN    yarn install --frozen-lockfile --production \
    && yarn cache clean \
    && chmod +x ./bin/start-runner.js

RUN chmod +x ./bin/start-runner.js

COPY ./packages/runner/entrypoint.sh /

ENV PACKAGE_DIR=${PACKAGE_DIR}
ENV PIPES_DIR=${PIPES_DIR}
ENV RUNNER_DIR=${RUNNER_DIR}

ENTRYPOINT [ "/entrypoint.sh" ]
CMD [ "start-runner" ]
